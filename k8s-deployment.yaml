apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\dev\projects\go-server\kompose.exe convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: app
  name: app
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: app
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\dev\projects\go-server\kompose.exe convert
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/go-server-postgres: "true"
        io.kompose.service: app
    spec:
      containers:
        - env:
            - name: POSTGRES_PASSWORD
              value: postgres
          image: tolseone/go-service:latest
          name: ps-backend
          ports:
            - containerPort: 1234
              hostPort: 1234
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\dev\projects\go-server\kompose.exe convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: app
  name: app
spec:
  ports:
    - name: "1234"
      port: 1234
      targetPort: 1234
  selector:
    io.kompose.service: app
  type: LoadBalancer
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\dev\projects\go-server\kompose.exe convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: pgadmin
  name: pgadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: pgadmin
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\dev\projects\go-server\kompose.exe convert
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/go-server-postgres: "true"
        io.kompose.service: pgadmin
    spec:
      containers:
        - env:
            - name: PGADMIN_CONFIG_SERVER_MODE
              value: "False"
            - name: PGADMIN_DEFAULT_EMAIL
              value: admin@mymail.ru
            - name: PGADMIN_DEFAULT_PASSWORD
              value: adminpassword
          image: dpage/pgadmin4
          name: pgadmin-container
          ports:
            - containerPort: 80
              hostPort: 8080
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/pgadmin
              name: pgadmin
      restartPolicy: Always
      volumes:
        - name: pgadmin
          persistentVolumeClaim:
            claimName: pgadmin
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: pgadmin
  name: pgadmin
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\dev\projects\go-server\kompose.exe convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: pgadmin
  name: pgadmin
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 80
  selector:
    io.kompose.service: pgadmin
  type: LoadBalancer
status:
  loadBalancer: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: postgres-claim0
  name: postgres-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\dev\projects\go-server\kompose.exe convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\dev\projects\go-server\kompose.exe convert
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/go-server-postgres: "true"
        io.kompose.service: postgres
    spec:
      containers:
        - env:
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_USER
              value: postgres
          image: postgres:14-alpine
          name: ps-psql
          ports:
            - containerPort: 5432
              hostPort: 5432
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-claim0
      restartPolicy: Always
      volumes:
        - name: postgres-claim0
          persistentVolumeClaim:
            claimName: postgres-claim0
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\dev\projects\go-server\kompose.exe convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
  selector:
    io.kompose.service: postgres
  type: LoadBalancer
status:
  loadBalancer: {}

